<script>
  import { locations } from '../data/locations';

  class LocationManager {
    constructor() {
      this.locationsList = document.getElementById('locationsList');
      this.citySelect = document.getElementById('city');
      this.districtSelect = document.getElementById('district');
      this.typeSelect = document.getElementById('type');
      this.contractSelect = document.getElementById('contract');
      this.resetButton = document.getElementById('resetFilters');

      this.initializeEventListeners();
      this.filterLocations(); // ƒ∞lk y√ºkleme i√ßin
    }

    initializeEventListeners() {
      // Throttle ile performansƒ± iyile≈ütirme
      const throttledFilter = this.throttle(() => this.filterLocations(), 100);

      this.citySelect?.addEventListener('change', throttledFilter);
      this.districtSelect?.addEventListener('change', throttledFilter);
      this.typeSelect?.addEventListener('change', throttledFilter);
      this.contractSelect?.addEventListener('change', throttledFilter);
      
      this.resetButton?.addEventListener('click', () => {
        this.resetFilters();
        this.filterLocations(); // Anƒ±nda filtreleme
      });
    }

    // Throttle fonksiyonu
    throttle(func, limit) {
      let inThrottle;
      return function() {
        const args = arguments;
        const context = this;
        if (!inThrottle) {
          func.apply(context, args);
          inThrottle = true;
          setTimeout(() => inThrottle = false, limit);
        }
      }
    }

    resetFilters() {
      if (!this.citySelect || !this.districtSelect || !this.typeSelect || !this.contractSelect) return;

      this.citySelect.value = '';
      this.districtSelect.value = '';
      this.districtSelect.disabled = true;
      this.typeSelect.value = '';
      this.contractSelect.value = '';
    }

    filterLocations() {
      if (!this.locationsList) return;

      const selectedCity = this.citySelect?.value;
      const selectedDistrict = this.districtSelect?.value;
      const selectedType = this.typeSelect?.value;
      const selectedContract = this.contractSelect?.value;

      // Hi√ßbir filtre se√ßili deƒüilse ba≈ülangƒ±√ß mesajƒ±nƒ± g√∂ster
      if (!selectedCity && !selectedDistrict && !selectedType && selectedContract === '') {
        this.showMessage('L√ºtfen arama yapmak i√ßin yukarƒ±daki filtreleri kullanƒ±n');
        return;
      }

      const filteredLocations = locations.filter(location => {
        if (selectedCity && location.city !== selectedCity) return false;
        if (selectedDistrict && location.district !== selectedDistrict) return false;
        if (selectedType && location.type !== selectedType) return false;
        if (selectedContract !== '') {
          return location.contract === (selectedContract === 'true');
        }
        return true;
      });

      this.updateLocationsList(filteredLocations);
    }

    showMessage(message) {
      if (!this.locationsList) return;
      
      this.locationsList.innerHTML = `
        <div class="col-span-full text-center py-10 text-gray-500">
          ${message}
        </div>
      `;
    }

    updateLocationsList(filteredLocations) {
      if (!this.locationsList) return;

      if (filteredLocations.length === 0) {
        this.showMessage('Se√ßili kriterlere uygun sonu√ß bulunamadƒ±');
        return;
      }

      // DocumentFragment kullanarak performansƒ± artƒ±rma
      const fragment = document.createDocumentFragment();
      
      filteredLocations.forEach(location => {
        const div = document.createElement('div');
        div.className = 'bg-white rounded-lg shadow-sm p-4 hover:shadow-md transition-shadow';
        div.innerHTML = `
          <div class="flex justify-between items-start">
            <div>
              <div class="flex items-center">
                <span class="text-2xl mr-2">${location.type === 'hastane' ? 'üè•' : 'üíä'}</span>
                <h3 class="text-lg font-semibold text-gray-900">${location.name}</h3>
              </div>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                location.contract 
                  ? 'bg-green-100 text-green-800' 
                  : 'bg-red-100 text-red-800'
              } mt-2">
                ${location.contract ? 'Anla≈ümalƒ±' : 'Anla≈ümasƒ±z'}
              </span>
            </div>
          </div>

          <div class="mt-4 space-y-2">
            <p class="text-sm text-gray-500">
              <span class="font-medium">Adres:</span> ${location.address}
            </p>
            <p class="text-sm text-gray-500">
              <span class="font-medium">≈ûehir/ƒ∞l√ße:</span> ${location.city}/${location.district}
            </p>
            ${location.iletisim ? `
              <p class="text-sm text-gray-500">
                <span class="font-medium">ƒ∞leti≈üim:</span> 
                <a href="tel:${location.iletisim}" class="text-blue-600 hover:text-blue-800">
                  ${location.iletisim}
                </a>
              </p>
            ` : ''}
          </div>

          <div class="mt-4">
            <a
              href="https://www.google.com/maps/dir/?api=1&destination=${location.latitude},${location.longitude}&destination_place_id=${encodeURIComponent(location.name)}"
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center text-sm text-blue-600 hover:text-blue-800"
            >
              Yol Tarifi
              <svg class="ml-1 w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
                <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
              </svg>
            </a>
          </div>
        `;
        fragment.appendChild(div);
      });

      this.locationsList.innerHTML = '';
      this.locationsList.appendChild(fragment);
    }
  }

  // Sayfa y√ºklendiƒüinde Location Manager'ƒ± ba≈ülat
  new LocationManager();
</script>
